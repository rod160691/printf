#include <stdio.h>
#include <stdarg.h>

/**
 * _putchar - Writes a character to stdout
 * @c: The character to be written
 *
 * Return: On success, the character written. On error, -1 is returned.
 */
int _putchar(char c)
{
	return write(1, &c, 1);
}

/**
 * _printf - Custom printf function that supports %c, %s, and %%
 * @format: A character string containing the format specifiers
 *
 * Return: The number of characters printed (excluding the null byte)
 */
int _printf(const char *format, ...)
{
	va_list args;
	int count = 0;

	if (format == NULL)
		return (-1);

	va_start(args, format);

	while (*format)
	{
		if (*format != '%')
		{
			_putchar(*format);
			count++;
		}
		else
		{
			format++;
			if (*format == 'c')
				count += _printf_char(va_arg(args, int));
			else if (*format == 's')
				count += _printf_string(va_arg(args, char *));
			else if (*format == '%')
			{
				_putchar('%');
				count++;
			}
			else
			{
				_putchar('%');
				_putchar(*format);
				count += 2;
			}
		}
		format++;
	}

	va_end(args);
	return (count);
}

/**
 * _printf_char - Prints a character and returns 1
 * @c: The character to be printed
 *
 * Return: 1 (number of characters printed)
 */
int _printf_char(char c)
{
	_putchar(c);
	return (1);
}

/**
 * _printf_string - Prints a string and returns its length
 * @str: The input string
 *
 * Return: The number of characters printed (excluding the null byte)
 */
int _printf_string(char *str)
{
	int count = 0;

	if (str == NULL)
		str = "(null)";

	while (*str)
	{
		_putchar(*str);
		count++;
		str++;
	}

	return (count);
}
